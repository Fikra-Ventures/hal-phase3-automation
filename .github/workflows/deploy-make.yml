name: Deploy Make blueprints

on:
  push:
    branches: [ main ]
    paths:
      - "make/blueprints/*.json"
      - ".github/workflows/deploy-make.yml"
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  import_blueprints:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure jq is available
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Import blueprints to Make
        env:
          MAKE_API_TOKEN: ${{ secrets.MAKE_API_TOKEN }}   # required
          MAKE_ORG_ID: ${{ secrets.MAKE_ORG_ID }}         # required (you added this)
          MAKE_BASE: https://eu2.make.com                 # change to eu1/us1 if needed
        shell: bash
        run: |
          set -euo pipefail

          # ---- required env checks ----
          if [ -z "${MAKE_API_TOKEN:-}" ]; then
            echo "‚ùå Missing secrets.MAKE_API_TOKEN"; exit 1
          fi
          if [ -z "${MAKE_ORG_ID:-}" ]; then
            echo "‚ùå Missing secrets.MAKE_ORG_ID"; exit 1
          fi

          API_URL="${MAKE_BASE}/api/v2/orgs/${MAKE_ORG_ID}/blueprints/import"

          # ---- collect blueprint files ----
          shopt -s nullglob
          files=(make/blueprints/*.json)
          if [ ${#files[@]} -eq 0 ]; then
            echo "‚ÑπÔ∏è No blueprint files under make/blueprints/*.json ‚Äî nothing to import."
            exit 0
          fi

          echo "Using Make API: ${API_URL}"
          for f in "${files[@]}"; do
            echo "üì¶ Importing ${f}"
            # Validate JSON
            jq -e . < "${f}" >/dev/null

            # Wrap as expected payload: { "blueprint": <json> }
            payload=$(jq -c '{blueprint: .}' < "${f}")

            http_code=$(curl -sS -o /tmp/make_import_resp.json -w "%{http_code}" \
              -X POST "${API_URL}" \
              -H "Authorization: Token ${MAKE_API_TOKEN}" \
              -H "Content-Type: application/json" \
              --data "${payload}")

            if [ "${http_code}" -ge 200 ] && [ "${http_code}" -lt 300 ]; then
              echo "‚úÖ Imported ${f}"
            else
              echo "‚ùå Import failed for ${f} (HTTP ${http_code})"
              echo "Response:"
              cat /tmp/make_import_resp.json || true
              exit 1
            fi
          done
