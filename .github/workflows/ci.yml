name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect project
        id: detect
        shell: bash
        run: |
          has_node="false"
          has_python="false"
          # Node detection
          if [ -f package.json ]; then has_node="true"; fi
          # Python detection
          if [ -f pyproject.toml ] || ls requirements*.txt >/dev/null 2>&1; then has_python="true"; fi

          echo "has_node=$has_node" >> "$GITHUB_OUTPUT"
          echo "has_python=$has_python" >> "$GITHUB_OUTPUT"

      - name: Print tool versions (best effort)
        run: |
          node -v || true
          pnpm -v || true
          python3 --version || true
          pip --version || true

      # ---------- Node (guarded) ----------
      - name: Setup pnpm
        if: steps.detect.outputs.has_node == 'true'
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node
        if: steps.detect.outputs.has_node == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          # ⚠️ cache intentionally omitted (avoids lockfile requirement)

      - name: Install dependencies (Node)
        if: steps.detect.outputs.has_node == 'true'
        run: pnpm install --no-frozen-lockfile

      - name: Type check (Node)
        if: steps.detect.outputs.has_node == 'true'
        run: pnpm run -s type-check || true

      - name: Lint (Node)
        if: steps.detect.outputs.has_node == 'true'
        run: pnpm run -s lint || true

      - name: Test (Node)
        if: steps.detect.outputs.has_node == 'true'
        run: pnpm test -- --passWithNoTests

      # ---------- Python (guarded) ----------
      - name: Setup Python
        if: steps.detect.outputs.has_python == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies (Python)
        if: steps.detect.outputs.has_python == 'true'
        shell: bash
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f pyproject.toml ]; then pip install . || true; fi

      - name: Lint/Test (Python)
        if: steps.detect.outputs.has_python == 'true'
        run: echo "TODO: add flake8/mypy/pytest when present"

      # ---------- Fallback ----------
      - name: No code detected – skipped installs/tests
        if: steps.detect.outputs.has_node != 'true' && steps.detect.outputs.has_python != 'true'
        run: echo "No Node or Python project detected; skipping."
